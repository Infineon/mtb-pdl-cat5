<?xml version="1.0" encoding="utf-8"?>

<!--****************************************************************************
* \file power_wifi.cypersonality
* \version 1.0
*
* \brief
* Personality description file for the WiFi part of Low Power Assistant.
*
********************************************************************************
* \copyright
* Copyright 2024 Cypress Semiconductor Corporation
* SPDX-License-Identifier: Apache-2.0
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*****************************************************************************-->

<Personality id="power_wifi" name="Power Wifi" version="1.0" xmlns="http://cypress.com/xsd/cyhwpersonality_v7">
  <Dependencies>
    <IpBlock name="55500A0_power">
    </IpBlock>
    <Resource name="power\.wifi" />
  </Dependencies>
  <ExposedMembers />

  <Parameters>
    <ParamDoc id="doc" name="Configuration Help" group="Overview" default="https://Infineon.github.io/lpa/api_reference_manual/html/index.html" linkText="Open Low Power Assistant Documentation" visible="true" desc="Open the Low Power Assistant Documentation." />

    <!-- MQTT Offload settings -->
    <ParamBool id="mqttOffload" name="Enable" group="MQTT Offload Configuration" default="false" visible="true" editable="true" desc="Enable MQTT offload feature." />
    <ParamString id="mqtt_wakepattern" name="MQTT wake pattern" group="MQTT Offload Configuration" default="" visible="`${mqttOffload}`" editable="true" desc="Set the MQTT wake pattern to the WLAN." />

    <!-- AWS MQTT Filters -->
    <!-- TLS Configuration -->
    <ParamBool id="configTLS" name="Enable MQTT TLS Filter" group="AWS MQTT Filters" default="false" visible="true" editable="true" desc="Enable AWS MQTT filter for TLS protocol." />
    <ParamString id="configTLSID" name="Filter ID" group="MQTT TLS Filter Configuration" default="0" visible="`${configTLS}`" editable="false" desc="Filter ID." />
    <ParamChoice id="filterTLSAction" name="Action" group="MQTT TLS Filter Configuration" default="CY_PF_ACTION_KEEP" visible="`${configTLS}`" editable="true" desc="Filter can either pass up packets that match the filter to the host device (Keep) or drop them so the host device never gets them (Discard)." >
      <Entry name="Keep" value="CY_PF_ACTION_KEEP" visible="true" />
      <Entry name="Discard" value="CY_PF_ACTION_DISCARD" visible="true" />
    </ParamChoice>
    <ParamChoice id="filterTLSAllow" name="When Active" group="MQTT TLS Filter Configuration" default="CY_PF_ACTIVE_SLEEP | CY_PF_ACTIVE_WAKE" visible="`${configTLS}`" editable="false" desc="Defines when the filter is active." >
      <Entry name="Always" value="CY_PF_ACTIVE_SLEEP | CY_PF_ACTIVE_WAKE" visible="true" />
    </ParamChoice>
    <ParamChoice id="filterTLSProt" name="Protocol" group="MQTT TLS Filter Configuration" default="CY_PF_PROTOCOL_TCP" visible="`${configTLS}`" editable="true" desc="Choose communication protocol." >
      <Entry name="TCP" value="CY_PF_PROTOCOL_TCP" visible="true" />
      <Entry name="UDP" value="CY_PF_PROTOCOL_UDP" visible="true" />
    </ParamChoice>
    <ParamChoice id="filterTLSDir" name="Direction" group="MQTT TLS Filter Configuration" default="PF_PN_PORT_DEST" visible="`${configTLS}`" editable="true" desc="Choose source or destination port or (source and destination port)." >
      <Entry name="Destination Port" value="PF_PN_PORT_DEST" visible="true" />
      <Entry name="Source Port" value="PF_PN_PORT_SOURCE" visible="true" />
      <Entry name="Source and Destination Port" value="PF_PN_PORT_SOURCE_DEST" visible="true" />
     </ParamChoice>
    <ParamRange id="filterTLSPort" name="Port Number" group="MQTT TLS Filter Configuration" default="8883" min="0" max="65535" resolution="1" visible="`${configTLS}`" editable="false" desc="Port number for TLS protocol filter." />

    <!-- Non TLS Configuration -->
    <ParamBool id="configNonTLS" name="Enable MQTT Filter" group="AWS MQTT Filters" default="false" visible="true" editable="true" desc="Enable AWS MQTT filter for non TLS protocols." />
    <ParamString id="configNonTLSID" name="Filter ID" group="MQTT Filter Configuration" default="`${configTLS ? 1 : 0}`" visible="`${configNonTLS}`" editable="false" desc="Filter ID." />
    <ParamChoice id="filterNonTLSAction" name="Action" group="MQTT Filter Configuration" default="CY_PF_ACTION_KEEP" visible="`${configNonTLS}`" editable="true" desc="Filter can either pass up packets that match the filter to the host device (Keep) or drop them so the host device never gets them (Discard)." >
      <Entry name="Keep" value="CY_PF_ACTION_KEEP" visible="true" />
      <Entry name="Discard" value="CY_PF_ACTION_DISCARD" visible="true" />
    </ParamChoice>
    <ParamChoice id="filterNonTLSAllow" name="When Active" group="MQTT Filter Configuration" default="CY_PF_ACTIVE_SLEEP | CY_PF_ACTIVE_WAKE" visible="`${configNonTLS}`" editable="false" desc="Defines when the filter is active." >
      <Entry name="Always" value="CY_PF_ACTIVE_SLEEP | CY_PF_ACTIVE_WAKE" visible="true" />
    </ParamChoice>
    <ParamChoice id="filterNonTLSProt" name="Protocol" group="MQTT Filter Configuration" default="CY_PF_PROTOCOL_TCP" visible="`${configNonTLS}`" editable="true" desc="Choose communication protocol." >
      <Entry name="TCP" value="CY_PF_PROTOCOL_TCP" visible="true" />
      <Entry name="UDP" value="CY_PF_PROTOCOL_UDP" visible="true" />
    </ParamChoice>
    <ParamChoice id="filterNonTLSDir" name="Direction" group="MQTT Filter Configuration" default="PF_PN_PORT_DEST" visible="`${configNonTLS}`" editable="true" desc="Choose source or destination port or (source and destination port)." >
      <Entry name="Destination Port" value="PF_PN_PORT_DEST" visible="true" />
      <Entry name="Source Port" value="PF_PN_PORT_SOURCE" visible="true" />
      <Entry name="Source and Destination Port" value="PF_PN_PORT_SOURCE_DEST" visible="true" />
    </ParamChoice>
    <ParamRange id="filterNonTLSPort" name="Port Number" group="MQTT Filter Configuration" default="1883" min="0" max="65535" resolution="1" visible="`${configNonTLS}`" editable="false" desc="Port number for non TLS protocols filter." />

    <ParamBool id="minKeepFilt" name="Add Minimal Set of Keep Filters" group="Packet Filters" default="false" visible="true" editable="true" desc="Create a minimal set of keep filters required for the host to join the network. This creates the ARP filter. Enabling this option will enable and configure packet filter configuration 0." />

    <!-- Packet Filter Configurations -->
    <!-- Minimum Set of Keep Filters to be able to connect to the network:
      - Keep, EtherType 0x806 # Allow ARP
    Enable and configure the filters when requested -->
    <Repeat count="8">
      <ParamBool id="config$idx_editable" name="Filter Configuration $idx is Editable" group="Internal" default="`${($idx &gt;= 1) || !minKeepFilt}`" visible="false" editable="false" desc="" />
      <ParamBool id="config$idx" name="Enable Filter Configuration $idx" group="Packet Filters" default="`${($idx &lt; 1) &amp;&amp; minKeepFilt}`" visible="true" editable="`${config$idx_editable}`" desc="Enable packet filter configuration $idx." />
      <ParamBool id="config$idx_id" name="Filter ID" group="Packet Filter Configuration $idx"
        default="`${$idx == 0 ? ((configTLS ? 1 : 0) + (configNonTLS ? 1 : 0)) :
                               (getParamValue(&quot;config&quot; . ($idx-1) . &quot;_id&quot;) + (getParamValue(&quot;config&quot; . ($idx-1)) ? 1 : 0))}`" visible="`${(config$idx &gt;= 3)}`" editable="false" desc="Filter ID." />

      <ParamChoice id="filter$idx_type" name="Filter Type" group="Packet Filter Configuration $idx"
        default="`${$idx == 0 ? (minKeepFilt ? CY_PF_PORT_ETHER_TYPE_FILTER : CY_PF_PORT_FILTER) :
                              CY_PF_PORT_FILTER}`" visible="`${config$idx}`" editable="`${config$idx_editable}`" desc="Choose filter type." >
        <Entry name="Port Filter" value="CY_PF_PORT_FILTER" visible="true" />
        <Entry name="Port Filter Block" value="CY_PF_PORT_BLOCK_FILTER" visible="true" />
        <Entry name="Ether Type" value="CY_PF_PORT_ETHER_TYPE_FILTER" visible="true" />
        <Entry name="IP Type" value="CY_PF_PORT_IP_TYPE_FILTER" visible="true" />
      </ParamChoice>
      <ParamBool id="filter$idx_portnum" name="Filter$idx Portnum" group="Internal" default="`${filter$idx_type eq CY_PF_PORT_FILTER || filter$idx_type eq CY_PF_PORT_BLOCK_FILTER}`" visible="false" editable="false" desc="Filter Port Number." />
      <ParamChoice id="filter$idx_action" name="Action" group="Packet Filter Configuration $idx" default="`${CY_PF_ACTION_KEEP}`" visible="`${config$idx}`" editable="`${config$idx_editable}`" desc="The filter can either pass up packets that match the filter to the host device (Keep) or drop them so that the host device never gets them (Discard)." >
        <Entry name="Keep" value="CY_PF_ACTION_KEEP" visible="true" />
        <Entry name="Discard" value="CY_PF_ACTION_DISCARD" visible="true" />
      </ParamChoice>
      <ParamChoice id="filter$idx_allow" name="When Active" group="Packet Filter Configuration $idx" default="CY_PF_ACTIVE_SLEEP | CY_PF_ACTIVE_WAKE" visible="`${config$idx}`" editable="false" desc="Defines when the filter is active." >
        <Entry name="Always" value="CY_PF_ACTIVE_SLEEP | CY_PF_ACTIVE_WAKE" visible="true" />
      </ParamChoice>
      <ParamChoice id="filter$idx_prot" name="Protocol" group="Packet Filter Configuration $idx"
        default="CY_PF_PROTOCOL_TCP" visible="`${config$idx &amp;&amp; filter$idx_portnum}`" editable="`${config$idx_editable}`" desc="Choose the communication protocol." >
        <Entry name="TCP" value="CY_PF_PROTOCOL_TCP" visible="true" />
        <Entry name="UDP" value="CY_PF_PROTOCOL_UDP" visible="true" />
      </ParamChoice>
      <ParamChoice id="filter$idx_dir" name="Direction" group="Packet Filter Configuration $idx"
      default="PF_PN_PORT_DEST" visible="`${config$idx &amp;&amp; filter$idx_portnum}`" editable="`${config$idx_editable}`" desc="Choose the source or destination port." >
        <Entry name="Destination Port" value="PF_PN_PORT_DEST" visible="true" />
        <Entry name="Source Port" value="PF_PN_PORT_SOURCE" visible="true" />
        <Entry name="Source and Destination Port" value="PF_PN_PORT_SOURCE_DEST" visible="true" />
      </ParamChoice>
      <ParamRange id="filter$idx_ether_type" name="EtherType" group="Packet Filter Configuration $idx" min="2048" max="65535" resolution="1"
        default="`${toHex($idx == 0 ? (minKeepFilt ? 0x0806 : 0x800) : 0x800)}`" visible="`${config$idx &amp;&amp; (filter$idx_type eq CY_PF_PORT_ETHER_TYPE_FILTER)}`" editable="`${config$idx_editable}`" desc="Enter a 16-bit ether type value. Example: 0x800 for IP, 0x806 for ARP." />
      <ParamRange id="filter$idx_ip_type" name="IP Protocol" group="Packet Filter Configuration $idx" default="0" min="0" max="255" resolution="1" visible="`${config$idx &amp;&amp; (filter$idx_type eq CY_PF_PORT_IP_TYPE_FILTER)}`" editable="`${config$idx_editable}`" desc="Enter the desired IP protocol number." />
      <ParamRange id="filter$idx_port" name="Port Number" group="Packet Filter Configuration $idx" min="0" max="65535" resolution="1"
        default="1024" visible="`${config$idx &amp;&amp; filter$idx_portnum}`" editable="`${config$idx_editable}`" desc="Either the single port to be filtered or the beginning of the block of contiguous numbers. When using a block, the starting port must be power of 2." />
      <ParamRange id="filter$idx_end_port" name="Range" group="Packet Filter Configuration $idx" default="1023" min="0" max="65535" resolution="1" visible="`${config$idx &amp;&amp; (filter$idx_type eq CY_PF_PORT_BLOCK_FILTER)}`" editable="`${config$idx_editable}`" desc="Indicates the size of the block of port numbers, must be of the (2^y - 1) form and less than Port Number." />
    </Repeat>

    <!-- Wake On Wireless Packet Filter Configurations -->
    <ParamBool id="wakeonlan" name="Enable" group="WakeOnWireless LAN (WOWL)" default="false" visible="true" editable="true" desc="Enable WOL magic and net pattern settings." />
    <ParamBool id="magicpattern" name="Enable Magic Pattern" group="WakeOnWireless LAN (WOWL)" default="false" visible="`${wakeonlan}`" editable="true" desc="Enable WOL magic pattern settings." />
    <ParamBool id="netpattern" name="Enable Net Pattern" group="WakeOnWireless LAN (WOWL)" default="false" visible="`${wakeonlan}`" editable="true" desc="Enable WOL net pattern settings." />
    <ParamString id="pattern" name="pattern" group="WOWL Filter Configuration" default="0x" visible="`${netpattern &amp;&amp; wakeonlan}`" editable="true" desc="wake pattern." />
    <ParamString id="mask" name="mask" group="WOWL Filter Configuration" default="0x" visible="`${netpattern &amp;&amp; wakeonlan}`" editable="true" desc="mask." />
    <ParamRange id="offset" name="offset" group="WOWL Filter Configuration" default="0" min="0" max="1500" resolution="1" visible="`${netpattern &amp;&amp; wakeonlan}`" editable="true" desc="offset." />
    <ParamBool id="wowl_enable" name="Enable WOWL" group="Internal" default="`${((netpattern || magicpattern) &amp;&amp; wakeonlan)}`" visible="false" editable="false" desc="Enable WOL net pattern settings." />

    <!-- Null Keep-alive Offload settings -->
    <ParamBool id="NullkoOffload" name="Configure Interval" group="NULL Keep Alive Offload" default="false" visible="true" editable="true" desc="NULL keep alive offload." />
    <ParamRange id="nullkovalue" name="Interval (s)" group="NULL Keep Alive Offload" default="110" min="1" max="4200" resolution="1" visible="`${NullkoOffload}`" editable="`${NullkoOffload}`" desc="Configure NULL keep-alive interval in seconds and resolution of 1 second." />

    <!-- NAT KA Offload settings -->
    <ParamBool id="natkaOffload" name="Enable" group="NAT Keep Alive Offload" default="false" visible="true" editable="true" desc="Enable NAT Keep Alive offload feature." />
    <ParamRange id="natkaInterval" name="Interval (s)" group="NAT Keep Alive Offload" default="60" min="1" max="600" resolution="1" visible="`${natkaOffload}`" editable="`${natkaOffload}`" desc="Interval in seconds between keep alive transmissions." />
    <ParamRange id="natkaSrcPort" name="Source Port" group="NAT Keep Alive Offload" default="49152" min="0" max="65535" resolution="1" visible="`${natkaOffload}`" editable="`${natkaOffload}`" desc="Source port." />
    <ParamRange id="natkaDstPort" name="Destination Port" group="NAT Keep Alive Offload" default="50007" min="0" max="65535" resolution="1" visible="`${natkaOffload}`" editable="`${natkaOffload}`" desc="Destination port." />
    <ParamString id="natkaDst" name="Destination Address" group="NAT Keep Alive Offload" default="" visible="`${natkaOffload}`" editable="`${natkaOffload}`" desc="Destination address (IP Address/URL)." />
    <ParamString id="natkaPayload" name="Keep Alive Payload" group="NAT Keep Alive Offload" default="" visible="`${natkaOffload}`" editable="`${natkaOffload}`" desc="NAT Keep Alive Payload." />


    <ParamString id="numOfActiveFilters" name="NumOfContexts" group="Internal" default="`${(config0 ? 1 : 0) + (config1 ? 1 : 0) + (config2 ? 1 : 0) + (config3 ? 1 : 0) + (config4 ? 1 : 0) + (config5 ? 1 : 0) + (config6 ? 1 : 0) + (config7 ? 1 : 0) + (configTLS ? 1 : 0) + (configNonTLS ? 1 : 0)}`" visible="false" editable="false" desc="Number of active filter configurations." />
    <ParamBool id="pktFilterEn" name="Packet filters Enabled" group="Internal" default="`${numOfActiveFilters != 0}`" visible="false" editable="false" desc="Are there any filters enabled flag." />
    <ParamString id="longIndent" name="Long Indent" group="Internal" default="&#9;&#9;&#9;" visible="false" editable="false" desc="Long indent for structure generation." />
    <ParamBool id="wowlpktOflIdx" name="Index of wowlpf_ol in the ol_list" group="Internal" default="`${pktFilterEn ? 1 : 0}`" visible="false" editable="false" desc="Are there any wowl filters enabled flag." />
    <ParamString id="tcpkaOflIdx" name="Index of tcpka_ol in the ol_list" group="Internal" default="`${wowlpktOflIdx + (wowl_enable ? 1 : 0)}`" visible="false" editable="false" desc="" />
    <ParamString id="tlsoeOflIdx" name="Index of tlsoe_ol in the ol_list" group="Internal" default="`${wowlpktOflIdx + (wowl_enable ? 1 : 0)}`" visible="false" editable="false" desc="" />
    <ParamString id="natkaOflIdx" name="Index of natka_ol in the ol_list" group="Internal" default="`${tlsoeOflIdx + (mqttOffload ? 1 : 0)}`" visible="false" editable="false" desc="" />
    <ParamString id="nullkoIdx" name="Index of nullko_ol in the ol_list" group="Internal" default="`${natkaOflIdx + (natkaOffload ? 1 : 0)}`" visible="false" editable="false" desc="" />
    <!-- Variable for Any of the offload enabled -->
    <ParamBool id="offload_enabled" name="Enable" group="Offload Enabled" default="`${pktFilterEn || mqttOffload || natkaOffload || NullkoOffload || wowl_enable}`" visible="false" editable="false" desc="Indicates if any one of the offload is enabled." />
  </Parameters>

  <DRCs>
    <DRC type="ERROR" text="Port Number must be of the (2^x) form for Filter Configuration $idx." condition="`${config$idx &amp;&amp; (filter$idx_type eq CY_PF_PORT_BLOCK_FILTER) &amp;&amp; ((filter$idx_port &amp; (filter$idx_port - 1)) != 0)}`" repeatCount="8" paramId="filter$idx_port">
    </DRC>
    <DRC type="ERROR" text="Range must be of the (2^y - 1) form for Filter Configuration $idx." condition="`${config$idx &amp;&amp; (filter$idx_type eq CY_PF_PORT_BLOCK_FILTER) &amp;&amp; (((filter$idx_end_port + 1) &amp; filter$idx_end_port) != 0)}`" repeatCount="8" paramId="filter$idx_end_port">
    </DRC>
    <DRC type="ERROR" text="Range must be less than Port Number for Filter Configuration $idx." condition="`${config$idx &amp;&amp; (filter$idx_type eq CY_PF_PORT_BLOCK_FILTER) &amp;&amp; (filter$idx_end_port &lt; filter$idx_port ? false : true)}`" repeatCount="8" paramId="filter$idx_end_port">
    </DRC>
    <DRC type="INFO" text="LPA Library must be included in the application for enabling low power features." condition="`${offload_enabled}`" paramId="offload_enabled">
    </DRC>
  </DRCs>

  <!-- Generated firmware -->
  <ConfigFirmware>
    <ConfigInclude value="cy_lpa_compat.h" include="`${offload_enabled}`" />
    <ConfigInclude value="cy_lpa_wifi_ol.h" include="`${offload_enabled}`" />
    <ConfigInclude value="cy_lpa_wifi_ol_common.h" include="`${offload_enabled}`" />
    <ConfigInclude value="cy_lpa_wifi_pf_ol.h" include="`${pktFilterEn}`" />
    <ConfigInclude value="cy_lpa_wifi_wowlpf_ol.h" include="`${wowl_enable}`" />
    <ConfigInclude value="cy_lpa_wifi_tls_ol.h" include="`${mqttOffload}`" />
    <ConfigInclude value="cy_lpa_wifi_nko_ol.h" include="`${natkaOffload}`" />
    <ConfigInclude value="cy_lpa_wifi_nullko_ol.h" include="`${NullkoOffload}`" />

    <ConfigDefine name="CYCFG_PF_OL_ENABLED" public="false" value="(1u)" include="`${pktFilterEn}`" preventOverride="false" />
    <ConfigDefine name="CYCFG_WOWLPF_OL_ENABLED" public="true" value="(1u)" include="`${wowl_enable}`" preventOverride="false" />
    <ConfigDefine name="CYCFG_WOWL_MAGIC_PKT_ENABLED" public="true" value="(1u)" include="`${magicpattern &amp;&amp; wakeonlan}`" preventOverride="false" />
    <ConfigDefine name="CYCFG_WIFI_MQTT_OL_SUPPORT" public="true" value="(1u)" include="`${mqttOffload}`" preventOverride="false" />
    <ConfigDefine name="CYCFG_WIFI_NULKO_OL_ENABLED" public="true" value="(1u)" include="`${NullkoOffload}`" preventOverride="false" />
    <ConfigDefine name="CYCFG_NKO_OL_ENABLED" public="false" value="(1u)" include="`${natkaOffload}`" preventOverride="false" />

    <ConfigVariable const="false" type="pf_ol_t" name="pf_ol_0" public="false" include="`${pktFilterEn}`" />
    <ConfigVariable const="false" type="wowlpf_ol_t" name="wowlpf_ol_0" public="false" include="`${wowl_enable}`" />
    <ConfigVariable const="false" type="tlsoe_ol_t" name="tlsoe_ol_0_ctxt" public="false" include="`${mqttOffload}`" />
    <ConfigVariable const="false" type="nullko_ol_t" name="nullko_ol_0_ctxt" public="false" include="`${NullkoOffload}`" />
    <ConfigVariable const="false" type="nko_ol_t" name="nko_ol_0_ctxt" public="false" include="`${natkaOffload}`" />


    <!-- Packet Filter (PF) Offload Configuration -->
    <ConfigStruct name="cy_pf_ol_cfg_0" type="cy_pf_ol_cfg_t" const="true" isArray="true" public="false" include="`${pktFilterEn}`">
      <Member name="`${configTLSID}`u" value="{.feature = CY_PF_OL_FEAT_PORTNUM,&#xA;`${longIndent}`.bits = `${filterTLSAllow}``${filterTLSAction eq CY_PF_ACTION_DISCARD ? (&quot; | CY_PF_ACTION_DISCARD&quot;) : (&quot;&quot;)}`,&#xA;`${longIndent}`.id = `${configTLSID}`u,&#xA;`${longIndent}`.u = {&#xA;&#9;`${longIndent}`.pf = {&#xA;`${longIndent}``${longIndent}`.portnum = {.portnum = `${filterTLSPort}`u,&#xA;`${longIndent}``${longIndent}``${longIndent}`.range = 0u,&#xA;`${longIndent}``${longIndent}``${longIndent}`.direction = `${filterTLSDir}`,},&#xA;`${longIndent}``${longIndent}`.proto = `${filterTLSProt}`,&#xA;&#9;&#9;`${longIndent}`},&#xA;&#9;`${longIndent}`},&#xA;`${longIndent}`}" include="`${configTLS}`" />

      <Member name="`${configNonTLSID}`u" value="{.feature = CY_PF_OL_FEAT_PORTNUM,&#xA;`${longIndent}`.bits = `${filterNonTLSAllow}``${filterNonTLSAction eq CY_PF_ACTION_DISCARD ? (&quot; | CY_PF_ACTION_DISCARD&quot;) : (&quot;&quot;)}`,&#xA;`${longIndent}`.id = `${configNonTLSID}`u,&#xA;`${longIndent}`.u = {&#xA;&#9;`${longIndent}`.pf = {&#xA;`${longIndent}``${longIndent}`.portnum = {.portnum = `${filterNonTLSPort}`u,&#xA;`${longIndent}``${longIndent}``${longIndent}`.range = 0u,&#xA;`${longIndent}``${longIndent}``${longIndent}`.direction = `${filterNonTLSDir}`,},&#xA;`${longIndent}``${longIndent}`.proto = `${filterNonTLSProt}`,&#xA;&#9;&#9;`${longIndent}`},&#xA;&#9;`${longIndent}`},&#xA;`${longIndent}`}" include="`${configNonTLS}`" />

      <Member name="`${config##_id}`u" value="{.feature = `${filter##_type eq CY_PF_PORT_ETHER_TYPE_FILTER ? (&quot;CY_PF_OL_FEAT_ETHTYPE&quot;) : (filter##_type eq CY_PF_PORT_IP_TYPE_FILTER ? (&quot;CY_PF_OL_FEAT_IPTYPE&quot;) : (&quot;CY_PF_OL_FEAT_PORTNUM&quot;))}`,&#xA;`${longIndent}`.bits = `${filter##_allow}``${filter##_action eq CY_PF_ACTION_DISCARD ? (&quot; | CY_PF_ACTION_DISCARD&quot;) : (&quot;&quot;)}`,&#xA;`${longIndent}`.id = `${config##_id}`u,&#xA;`${longIndent}``${filter##_type eq CY_PF_PORT_ETHER_TYPE_FILTER ? (&quot;.u = {&#xA;&#9;&#9;&#9;&#9;.eth = {&#xA;&#9;&#9;&#9;&#9;&#9;&#9;.eth_type = &quot;) : (&quot;&quot;)}``${filter##_type eq CY_PF_PORT_ETHER_TYPE_FILTER ? (filter##_ether_type) : (&quot;&quot;)}``${filter##_type eq CY_PF_PORT_ETHER_TYPE_FILTER ? (&quot;u,&#xA;&#9;&#9;&#9;&#9;&#9;&#9;},&#xA;&#9;&#9;&#9;&#9;},&#xA;&#9;&#9;&#9;&quot;) : (&quot;&quot;)}``${filter##_type eq CY_PF_PORT_IP_TYPE_FILTER ? (&quot;.u = {&#xA;&#9;&#9;&#9;&#9;.ip = {&#xA;&#9;&#9;&#9;&#9;&#9;&#9;.ip_type = &quot;) : (&quot;&quot;)}``${filter##_type eq CY_PF_PORT_IP_TYPE_FILTER ? (filter##_ip_type) : (&quot;&quot;)}``${filter##_type eq CY_PF_PORT_IP_TYPE_FILTER ? (&quot;u,&#xA;&#9;&#9;&#9;&#9;&#9;&#9;},&#xA;&#9;&#9;&#9;&#9;},&#xA;&#9;&#9;&#9;&quot;) : (&quot;&quot;)}``${filter##_portnum ? (&quot;.u = {&#xA;&#9;&#9;&#9;&#9;.pf = {&#xA;&#9;&#9;&#9;&#9;&#9;&#9;.portnum = {.portnum = &quot;) : (&quot;&quot;)}``${filter##_portnum ? (filter##_port) : (&quot;&quot;)}``${filter##_portnum ? (&quot;u,&#xA;&quot;) : (&quot;&quot;)}``${filter##_portnum ? (&quot;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;) : (&quot;&quot;)}``${filter##_portnum ? (&quot;.range = &quot;) : (&quot;&quot;)}``${filter##_portnum ? (filter##_type eq CY_PF_PORT_BLOCK_FILTER ? filter##_end_port : 0) : (&quot;&quot;)}``${filter##_portnum ? (&quot;u,&#xA;&quot;) : (&quot;&quot;)}``${filter##_portnum ? (&quot;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;) : (&quot;&quot;)}``${filter##_portnum ? (&quot;.direction = &quot;) : (&quot;&quot;)}``${filter##_portnum ? (filter##_dir) : (&quot;&quot;)}``${filter##_portnum ? (&quot;,},&#xA;&quot;) : (&quot;&quot;)}``${filter##_portnum ? (&quot;&#9;&#9;&#9;&#9;&#9;&#9;&quot;) : (&quot;&quot;)}``${filter##_portnum ? (&quot;.proto = &quot;) : (&quot;&quot;)}``${filter##_portnum ? (filter##_prot) : (&quot;&quot;)}``${filter##_portnum ? (&quot;,&#xA;&#9;&#9;&#9;&#9;&#9;},&#xA;&#9;&#9;&#9;&#9;},&#xA;&#9;&#9;&#9;&quot;) : (&quot;&quot;)}`}" include="`${config##}`" count="8"/>

      <Member name="`${numOfActiveFilters}`u" value="{.feature = CY_PF_OL_FEAT_LAST}" include="true"/>
    </ConfigStruct>

    <!-- WOWL Packet Filter (WOWLPF) Offload Configuration -->
    <ConfigStruct name="cy_wowlpf_ol_cfg_0" type="cy_wowlpf_ol_cfg_t" const="true" isArray="true" public="false" include="`${wowl_enable}`">
      <Member name="`${0}`u" value="{.feature = CY_WOWLPF_OL_FEAT_WAKE,
                    &#xA;`${longIndent}`.pattern = &quot;`${pattern}`&quot;,
                    &#xA;`${longIndent}`.mask = &quot;`${mask}`&quot;,
                    &#xA;`${longIndent}`.offset = `${offset}`u,
                    &#xA;&#9;&#9;&#9;}" include="`${netpattern}`" />

      <Member name="`${(!netpattern &amp;&amp; magicpattern) ? 0 : 1}`u" value="{.feature = CY_WOWLPF_OL_FEAT_LAST}" include="`${wowl_enable}`" />
    </ConfigStruct>

    <!-- MQTT Keep Alive (TLSOE) Offload Configuration -->
    <ConfigStruct name="cy_tlsoe_ol_cfg_0" type="cy_tlsoe_ol_cfg_t" const="true" isArray="false" public="false" include="`${mqttOffload}`">
      <Member name="`${&quot;ports[##]&quot;}`" value="{
                              &#xA;`${longIndent}`.patt_len = sizeof(&quot;`${mqtt_wakepattern}`&quot;)-1 ,
                              &#xA;`${longIndent}`.wakepatt = &quot;`${mqtt_wakepattern}`&quot; ,
          &#xA;&#9;&#9;&#9;}" include="true" count="1"/>
    </ConfigStruct>

    <!-- NULL Keep Alive Offload Configuration -->
    <ConfigStruct name="cy_nullko_ol_cfg_0" type="cy_nullko_ol_cfg_t" const="true" isArray="false" public="false" include="`${NullkoOffload}`">
      <Member name="interval" value="`${nullkovalue}`" include="true"/>
    </ConfigStruct>

    <!-- NAT Keep Alive (NKA) Offload Configuration -->
    <ConfigStruct name="cy_nko_ol_cfg_0" type="cy_lpa_nko_ol_cfg_t" const="true" isArray="false" public="false" include="`${natkaOffload}`">
      <Member name="interval" value="`${natkaInterval}` * 1000" include="true" />
      <Member name="server" value="&quot;`${natkaDst}`&quot;" include="true" />
      <Member name="s_port" value="`${natkaSrcPort}`" include="true" />
      <Member name="d_port" value="`${natkaDstPort}`" include="true" />
      <Member name="payload" value="&quot;`${natkaPayload}`&quot;" include="true" />
    </ConfigStruct>

    <ConfigStruct name="ol_list_0" type="ol_desc_t" const="true" isArray="true" public="false" include="`${offload_enabled}`">
      <Member name="`${0}`u" value="{&quot;Pkt_Filter&quot;, &amp;cy_pf_ol_cfg_0, &amp;pf_ol_fns, &amp;pf_ol_0}" include="`${pktFilterEn}`" />
      <Member name="`${wowlpktOflIdx}`u" value="{&quot;WOWLPF&quot;, &amp;cy_wowlpf_ol_cfg_0, &amp;wowlpf_ol_fns, &amp;wowlpf_ol_0}" include="`${wowl_enable}`" />
      <Member name="`${tlsoeOflIdx}`u" value="{&quot;TLSOE&quot;, &amp;cy_tlsoe_ol_cfg_0, &amp;tlsoe_ol_fns, &amp;tlsoe_ol_0_ctxt}" include="`${mqttOffload}`" />
      <Member name="`${natkaOflIdx}`u" value="{&quot;NKO&quot;, &amp;cy_nko_ol_cfg_0, &amp;nko_ol_fns, &amp;nko_ol_0_ctxt}" include="`${natkaOffload}`" />
      <Member name="`${nullkoIdx}`u" value="{&quot;NULLKO&quot;, &amp;cy_nullko_ol_cfg_0, &amp;nullko_ol_fns, &amp;nullko_ol_0_ctxt}" include="`${NullkoOffload}`" />
      <Member name="`${nullkoIdx + (NullkoOffload ? 1 : 0)}`u" value="{NULL, NULL, NULL, NULL}" include="`${offload_enabled}`" />
    </ConfigStruct>

    <ConfigFunction signature="const ol_desc_t *cycfg_get_default_ol_list(void)" body="&#9;return &amp;ol_list_0[0];" public="false" include="`${offload_enabled}`" />
  </ConfigFirmware>
</Personality>
